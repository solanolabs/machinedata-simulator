{"name":"Machinedata-simulator","tagline":"Simulates the Data from Machine for Predix RMD Reference App","body":"<a href=\"../../../../pages/adoption/machinedata-simulator/javadocs/index.html\" target=\"_blank\" >\r\n\t<img height=\"50px\" width=\"100px\" src=\"images/javadoc.png\" alt=\"view javadoc\"></a>\r\n&nbsp;\r\n<a href=\"../../../../pages/adoption/machinedata-simulator\" target=\"_blank\">\r\n\t<img height=\"50px\" width=\"100px\" src=\"images/pages.jpg\" alt=\"view github pages\">\r\n</a>\r\nmachinedata-simulator\r\n=====================\r\n\r\nWelcome to the Machine Data Simulator.  This service randomly generates data in a range that you specify in order to simulate Timeseries Data coming from a machine.  This is helpful when testing services in the cloud.\r\n\r\nThe simulator requires the [Reference App](https://github.com/PredixDev/predix-rmd-ref-app) to be installed and calls the [data-ingestion](https://github.com/PredixDev/dataingestion-service) service.   Please visit our tutorial series on [installing Reference App](https://predix.io/resources/tutorials/journey.html#Journey.Connect Devices Using Reference App).\r\n\r\nThe Data Ingestion service leverages the Reference App asset model and looks up the Asset.  The Asset model is a one-to-many of Asset to AssetMeter.  Each AssetMeter represents a Sensor and the AssetMeter object has various attributes about it.  The Data Ingestion service traverses the Asset Meters and finds the one with the matching Node Name. It then gets the Timeseries Tag attribute and pushes the data to the Predix Time Series.\r\n\r\nWhy do we not pass the Time Series tag directly?  From experience, we know that Time Series tags are transient.  For many reasons a Tag Name might change over time (bugs, changes to logic, etc). This is why we treat the Node Name as the primary key and do a look up in the Reference App asset model.  \r\n\r\nIn the future, we will provide a bypass, so the simulator can push the data to Time Series directly.\r\n\r\n\r\nTo start/stop the Simulator execute the following command\r\n\r\ncf start machinedata-simulator\r\n\r\ncf stop machinedata-simulator\r\n\r\nDownload the Machinedata-Simulator service\r\n\r\n      git clone https://github.com/PredixDev/machinedata-simulator.git\r\n\r\nBuild it\r\n\r\n      mvn clean install\r\n\r\nLaunch the service locally\r\n\r\n      java -jar target/machinedata-simulator-1.0.2-SNAPSHOT.jar\r\n      \r\nLook for the log entry indicating the port used.  e.g. \"Tomcat started on port(s): 8184 (http)\".  \r\n\r\nOr you can push it to the cloud\r\n\r\n      cf push \r\n      or\r\n      cf push <my-machinedata-simulator-name>\r\n      \r\nStop the simulator in cloud\r\n\r\n      cf stop <my-machinedata-simulator-name>\r\n      \r\nStart the simulator in cloud\r\n\r\n      cf start <my-machinedata-simulator-name>\r\n\r\n\r\n##Tech Stack\r\n- Spring\r\n- SpringBoot\r\n- SpringTest\r\n- Maven\r\n\r\n##Microcomponents\r\n- [AssetBootstrap](https://github.com/predixdev/asset-bootstrap)\r\n- [TimeseriesBootstrap](https://github.com/predixdev/timeseries-bootstrap)\r\n- [PredixBoot](https://github.com/predixdev/predix-boot)\r\n- [PredixRestClient](https://github.com/predixdev/predix-boot)\r\n\r\n### More Details\r\n* [More GE resources](http://github.com/predixdev/predix-rmd-ref-app/docs/resources.md)\r\n* [RMD Reference App](http://github.com/predixdev/predix-rmd-ref-app)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}